;******************************************INSTRUCTIONS*****************************************
;
;	To build all environments and test for errors, you can press the check mark or run `pio run`
;	
;	To upload the frr code, run `pio run -e frr -t upload`
; 	To upload the test code, run `pio run -e test -t upload`
;
;	To upload the flight code, you can do a few things:
;		1. Run 'pio run -e flight -t upload', which is the fastest
;		2. Press the upload button, though it is slower because it uploads the frr code and the test code first
;		   wipes it, and then uploads flight code
;		3. Run `pio run -t upload`, which is slow in the same way as 2
;
;************************************************************************************************

[env]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = arduino
board_build.core = earlephilhower
build_flags = -lstdc++
lib_deps = 
	dfrobot/DFRobot_OxygenSensor@^1.0.1
	sparkfun/SparkFun u-blox GNSS Arduino Library@^2.2.27
	adafruit/Adafruit BMP3XX Library@^2.1.6
	adafruit/Adafruit HDC302x@^1.0.3
	wollewald/ADS1115_WE@^1.5.4
; Include all files except .cpp files that end in _code
build_src_filter =
	+<*>
	-<*_code.cpp>

[env:test]
; Inherit the general files and add Test_code.cpp
build_src_filter =
	${env.build_src_filter}
    +<Test_code.cpp>

[env:frr]
; Inherit the general files and add FRR_code.cpp
build_src_filter =
	${env.build_src_filter}
    +<FRR_code.cpp>

; This environment needs to be the lowest to be the default
[env:flight]
; Inherit the general files and add Flight_code.cpp
build_src_filter =
	${env.build_src_filter}
    +<Flight_code.cpp>

